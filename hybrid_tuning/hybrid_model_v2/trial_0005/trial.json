{"trial_id": "0005", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "cnn_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 3, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "cnn_filters_0", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "kernel_size_0", "default": null, "conditions": [], "min_value": 2, "max_value": 7, "step": 1, "sampling": "linear"}}, {"class_name": "Boolean", "config": {"name": "use_batch_norm", "default": false, "conditions": []}}, {"class_name": "Float", "config": {"name": "cnn_dropout_0", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "lstm_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 2, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "lstm_units_0", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "lstm_dropout_0", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "num_heads", "default": null, "conditions": [], "min_value": 2, "max_value": 12, "step": 2, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "key_dim", "default": null, "conditions": [], "min_value": 16, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "fusion_method", "default": "concatenate", "conditions": [], "values": ["concatenate", "add", "multiply"], "ordered": false}}, {"class_name": "Int", "config": {"name": "dense_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 3, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_units_0", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dense_dropout_0", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "adamw", "radam"], "ordered": false}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 1e-05, "conditions": [], "min_value": 1e-05, "max_value": 0.01, "step": null, "sampling": "log"}}, {"class_name": "Int", "config": {"name": "cnn_filters_1", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "kernel_size_1", "default": null, "conditions": [], "min_value": 2, "max_value": 7, "step": 1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "cnn_dropout_1", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "lstm_units_1", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "lstm_dropout_1", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_units_1", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dense_dropout_1", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Boolean", "config": {"name": "use_residual", "default": false, "conditions": []}}, {"class_name": "Int", "config": {"name": "dense_units_2", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dense_dropout_2", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "weight_decay", "default": 1e-05, "conditions": [], "min_value": 1e-05, "max_value": 0.001, "step": null, "sampling": "log"}}, {"class_name": "Int", "config": {"name": "cnn_filters_2", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "kernel_size_2", "default": null, "conditions": [], "min_value": 2, "max_value": 7, "step": 1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "cnn_dropout_2", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}], "values": {"cnn_layers": 3, "cnn_filters_0": 192, "kernel_size_0": 4, "use_batch_norm": false, "cnn_dropout_0": 0.1, "lstm_layers": 2, "lstm_units_0": 192, "lstm_dropout_0": 0.4, "num_heads": 4, "key_dim": 16, "fusion_method": "multiply", "dense_layers": 3, "dense_units_0": 192, "dense_dropout_0": 0.4, "optimizer": "adamw", "learning_rate": 0.0001708431220011242, "cnn_filters_1": 224, "kernel_size_1": 5, "cnn_dropout_1": 0.4, "lstm_units_1": 256, "lstm_dropout_1": 0.1, "dense_units_1": 128, "dense_dropout_1": 0.30000000000000004, "use_residual": true, "dense_units_2": 64, "dense_dropout_2": 0.1, "weight_decay": 6.742425410470365e-05, "cnn_filters_2": 224, "kernel_size_2": 7, "cnn_dropout_2": 0.30000000000000004, "tuner/epochs": 2, "tuner/initial_epoch": 0, "tuner/bracket": 4, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\DJ\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\DJ\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\DJ\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\DJ\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\DJ\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n            ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\DJ\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\DJ\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\tuners\\hyperband.py\", line 430, in _build_hypermodel\n    model = super()._build_hypermodel(hp)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\DJ\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\DJ\\School\\College\\Sophomore Year\\2ND SEM\\CPEN70\\LAB RESEARCH OUTPUT - CODE\\Taal_Water_Quality3\\src\\models\\hybrid_tuner.py\", line 66, in build_hybrid_model\n    combined = layers.Multiply()([cnn_pooled, attention_pooled])\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\DJ\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\DJ\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras\\src\\layers\\merging\\base_merge.py\", line 93, in _compute_elemwise_op_output_shape\n    raise ValueError(\nValueError: Inputs have incompatible shapes. Received shapes (224,) and (256,)\n"}